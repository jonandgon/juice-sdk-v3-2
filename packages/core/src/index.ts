/**
 * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
 */
import { Provider } from '@ethersproject/abstract-provider';
import { Signer } from '@ethersproject/abstract-signer';
import { Contract } from '@ethersproject/contracts';
import {
  abi as JBETHPaymentTerminalABI_mainnet,
  address as JBETHPaymentTerminalAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBETHPaymentTerminal.json';
import {
  abi as JBSingleTokenPaymentTerminalStoreABI_mainnet,
  address as JBSingleTokenPaymentTerminalStoreAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBSingleTokenPaymentTerminalStore.json';
import {
  abi as JBControllerABI_mainnet,
  address as JBControllerAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBController.json';
import {
  abi as JBFundingCycleStoreABI_mainnet,
  address as JBFundingCycleStoreAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBFundingCycleStore.json';
import {
  abi as JBSplitsStoreABI_mainnet,
  address as JBSplitsStoreAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBSplitsStore.json';
import {
  abi as JBCurrenciesABI_mainnet,
  address as JBCurrenciesAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBCurrencies.json';
import {
  abi as JBOperatorStoreABI_mainnet,
  address as JBOperatorStoreAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBOperatorStore.json';
import {
  abi as JBTokenStoreABI_mainnet,
  address as JBTokenStoreAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBTokenStore.json';
import {
  abi as JBDirectoryABI_mainnet,
  address as JBDirectoryAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBDirectory.json';
import {
  abi as JBPricesABI_mainnet,
  address as JBPricesAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBPrices.json';
import {
  abi as JBETHERC20ProjectPayerDeployerABI_mainnet,
  address as JBETHERC20ProjectPayerDeployerAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBETHERC20ProjectPayerDeployer.json';
import {
  abi as JBProjectsABI_mainnet,
  address as JBProjectsAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBProjects.json';
import {
  abi as JBChainlinkV3PriceFeedABI_mainnet,
  address as JBChainlinkV3PriceFeedAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBChainlinkV3PriceFeed.json';
import {
  abi as JBETHERC20SplitsPayerDeployerABI_mainnet,
  address as JBETHERC20SplitsPayerDeployerAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JBETHERC20SplitsPayerDeployer.json';
import {
  abi as JB1DayReconfigurationBufferBallotABI_mainnet,
  address as JB1DayReconfigurationBufferBallotAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JB1DayReconfigurationBufferBallot.json';
import {
  abi as JB3DayReconfigurationBufferBallotABI_mainnet,
  address as JB3DayReconfigurationBufferBallotAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JB3DayReconfigurationBufferBallot.json';
import {
  abi as JB7DayReconfigurationBufferBallotABI_mainnet,
  address as JB7DayReconfigurationBufferBallotAddress_mainnet,
} from '@jbx-protocol/juice-contracts-v3/deployments/mainnet/JB7DayReconfigurationBufferBallot.json';
import {
  abi as JBETHPaymentTerminalABI_goerli,
  address as JBETHPaymentTerminalAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBETHPaymentTerminal.json';
import {
  abi as JBSingleTokenPaymentTerminalStoreABI_goerli,
  address as JBSingleTokenPaymentTerminalStoreAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBSingleTokenPaymentTerminalStore.json';
import {
  abi as JBControllerABI_goerli,
  address as JBControllerAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBController.json';
import {
  abi as JBFundingCycleStoreABI_goerli,
  address as JBFundingCycleStoreAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBFundingCycleStore.json';
import {
  abi as JBSplitsStoreABI_goerli,
  address as JBSplitsStoreAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBSplitsStore.json';
import {
  abi as JBCurrenciesABI_goerli,
  address as JBCurrenciesAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBCurrencies.json';
import {
  abi as JBOperatorStoreABI_goerli,
  address as JBOperatorStoreAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBOperatorStore.json';
import {
  abi as JBTokenStoreABI_goerli,
  address as JBTokenStoreAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBTokenStore.json';
import {
  abi as JBDirectoryABI_goerli,
  address as JBDirectoryAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBDirectory.json';
import {
  abi as JBPricesABI_goerli,
  address as JBPricesAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBPrices.json';
import {
  abi as JBETHERC20ProjectPayerDeployerABI_goerli,
  address as JBETHERC20ProjectPayerDeployerAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBETHERC20ProjectPayerDeployer.json';
import {
  abi as JBProjectsABI_goerli,
  address as JBProjectsAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBProjects.json';
import {
  abi as JBChainlinkV3PriceFeedABI_goerli,
  address as JBChainlinkV3PriceFeedAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBChainlinkV3PriceFeed.json';
import {
  abi as JBETHERC20SplitsPayerDeployerABI_goerli,
  address as JBETHERC20SplitsPayerDeployerAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JBETHERC20SplitsPayerDeployer.json';
import {
  abi as JB1DayReconfigurationBufferBallotABI_goerli,
  address as JB1DayReconfigurationBufferBallotAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JB1DayReconfigurationBufferBallot.json';
import {
  abi as JB3DayReconfigurationBufferBallotABI_goerli,
  address as JB3DayReconfigurationBufferBallotAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JB3DayReconfigurationBufferBallot.json';
import {
  abi as JB7DayReconfigurationBufferBallotABI_goerli,
  address as JB7DayReconfigurationBufferBallotAddress_goerli,
} from '@jbx-protocol/juice-contracts-v3/deployments/goerli/JB7DayReconfigurationBufferBallot.json';
import {
  JBETHPaymentTerminal,
  JBSingleTokenPaymentTerminalStore,
  JBController,
  JBFundingCycleStore,
  JBSplitsStore,
  JBCurrencies,
  JBOperatorStore,
  JBTokenStore,
  JBDirectory,
  JBPrices,
  JBETHERC20ProjectPayerDeployer,
  JBProjects,
  JBChainlinkV3PriceFeed,
  JBETHERC20SplitsPayerDeployer,
  JB1DayReconfigurationBufferBallot,
  JB3DayReconfigurationBufferBallot,
  JB7DayReconfigurationBufferBallot,
} from './types/contracts';
export type {
  JBETHPaymentTerminal,
  JBSingleTokenPaymentTerminalStore,
  JBController,
  JBFundingCycleStore,
  JBSplitsStore,
  JBCurrencies,
  JBOperatorStore,
  JBTokenStore,
  JBDirectory,
  JBPrices,
  JBETHERC20ProjectPayerDeployer,
  JBProjects,
  JBChainlinkV3PriceFeed,
  JBETHERC20SplitsPayerDeployer,
  JB1DayReconfigurationBufferBallot,
  JB3DayReconfigurationBufferBallot,
  JB7DayReconfigurationBufferBallot,
} from './types/contracts';

type SignerOrProvider = Signer | Provider;
export const getJBETHPaymentTerminal = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JBETHPaymentTerminalAddress_goerli
      : JBETHPaymentTerminalAddress_mainnet,
    network === 'goerli'
      ? JBETHPaymentTerminalABI_goerli
      : JBETHPaymentTerminalABI_mainnet,
    signerOrProvider,
  ) as Contract as JBETHPaymentTerminal;
export const getJBSingleTokenPaymentTerminalStore = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JBSingleTokenPaymentTerminalStoreAddress_goerli
      : JBSingleTokenPaymentTerminalStoreAddress_mainnet,
    network === 'goerli'
      ? JBSingleTokenPaymentTerminalStoreABI_goerli
      : JBSingleTokenPaymentTerminalStoreABI_mainnet,
    signerOrProvider,
  ) as Contract as JBSingleTokenPaymentTerminalStore;
export const getJBController = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JBControllerAddress_goerli
      : JBControllerAddress_mainnet,
    network === 'goerli' ? JBControllerABI_goerli : JBControllerABI_mainnet,
    signerOrProvider,
  ) as Contract as JBController;
export const getJBFundingCycleStore = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JBFundingCycleStoreAddress_goerli
      : JBFundingCycleStoreAddress_mainnet,
    network === 'goerli'
      ? JBFundingCycleStoreABI_goerli
      : JBFundingCycleStoreABI_mainnet,
    signerOrProvider,
  ) as Contract as JBFundingCycleStore;
export const getJBSplitsStore = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JBSplitsStoreAddress_goerli
      : JBSplitsStoreAddress_mainnet,
    network === 'goerli' ? JBSplitsStoreABI_goerli : JBSplitsStoreABI_mainnet,
    signerOrProvider,
  ) as Contract as JBSplitsStore;
export const getJBCurrencies = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JBCurrenciesAddress_goerli
      : JBCurrenciesAddress_mainnet,
    network === 'goerli' ? JBCurrenciesABI_goerli : JBCurrenciesABI_mainnet,
    signerOrProvider,
  ) as Contract as JBCurrencies;
export const getJBOperatorStore = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JBOperatorStoreAddress_goerli
      : JBOperatorStoreAddress_mainnet,
    network === 'goerli'
      ? JBOperatorStoreABI_goerli
      : JBOperatorStoreABI_mainnet,
    signerOrProvider,
  ) as Contract as JBOperatorStore;
export const getJBTokenStore = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JBTokenStoreAddress_goerli
      : JBTokenStoreAddress_mainnet,
    network === 'goerli' ? JBTokenStoreABI_goerli : JBTokenStoreABI_mainnet,
    signerOrProvider,
  ) as Contract as JBTokenStore;
export const getJBDirectory = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JBDirectoryAddress_goerli
      : JBDirectoryAddress_mainnet,
    network === 'goerli' ? JBDirectoryABI_goerli : JBDirectoryABI_mainnet,
    signerOrProvider,
  ) as Contract as JBDirectory;
export const getJBPrices = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli' ? JBPricesAddress_goerli : JBPricesAddress_mainnet,
    network === 'goerli' ? JBPricesABI_goerli : JBPricesABI_mainnet,
    signerOrProvider,
  ) as Contract as JBPrices;
export const getJBETHERC20ProjectPayerDeployer = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JBETHERC20ProjectPayerDeployerAddress_goerli
      : JBETHERC20ProjectPayerDeployerAddress_mainnet,
    network === 'goerli'
      ? JBETHERC20ProjectPayerDeployerABI_goerli
      : JBETHERC20ProjectPayerDeployerABI_mainnet,
    signerOrProvider,
  ) as Contract as JBETHERC20ProjectPayerDeployer;
export const getJBProjects = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli' ? JBProjectsAddress_goerli : JBProjectsAddress_mainnet,
    network === 'goerli' ? JBProjectsABI_goerli : JBProjectsABI_mainnet,
    signerOrProvider,
  ) as Contract as JBProjects;
export const getJBChainlinkV3PriceFeed = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JBChainlinkV3PriceFeedAddress_goerli
      : JBChainlinkV3PriceFeedAddress_mainnet,
    network === 'goerli'
      ? JBChainlinkV3PriceFeedABI_goerli
      : JBChainlinkV3PriceFeedABI_mainnet,
    signerOrProvider,
  ) as Contract as JBChainlinkV3PriceFeed;
export const getJBETHERC20SplitsPayerDeployer = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JBETHERC20SplitsPayerDeployerAddress_goerli
      : JBETHERC20SplitsPayerDeployerAddress_mainnet,
    network === 'goerli'
      ? JBETHERC20SplitsPayerDeployerABI_goerli
      : JBETHERC20SplitsPayerDeployerABI_mainnet,
    signerOrProvider,
  ) as Contract as JBETHERC20SplitsPayerDeployer;
export const getJB1DayReconfigurationBufferBallot = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JB1DayReconfigurationBufferBallotAddress_goerli
      : JB1DayReconfigurationBufferBallotAddress_mainnet,
    network === 'goerli'
      ? JB1DayReconfigurationBufferBallotABI_goerli
      : JB1DayReconfigurationBufferBallotABI_mainnet,
    signerOrProvider,
  ) as Contract as JB1DayReconfigurationBufferBallot;
export const getJB3DayReconfigurationBufferBallot = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JB3DayReconfigurationBufferBallotAddress_goerli
      : JB3DayReconfigurationBufferBallotAddress_mainnet,
    network === 'goerli'
      ? JB3DayReconfigurationBufferBallotABI_goerli
      : JB3DayReconfigurationBufferBallotABI_mainnet,
    signerOrProvider,
  ) as Contract as JB3DayReconfigurationBufferBallot;
export const getJB7DayReconfigurationBufferBallot = (
  signerOrProvider: SignerOrProvider,
  { network }: { network: 'mainnet' | 'goerli' } = { network: 'mainnet' },
) =>
  new Contract(
    network === 'goerli'
      ? JB7DayReconfigurationBufferBallotAddress_goerli
      : JB7DayReconfigurationBufferBallotAddress_mainnet,
    network === 'goerli'
      ? JB7DayReconfigurationBufferBallotABI_goerli
      : JB7DayReconfigurationBufferBallotABI_mainnet,
    signerOrProvider,
  ) as Contract as JB7DayReconfigurationBufferBallot;
